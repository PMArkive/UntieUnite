// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/res_CondStageTask.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PbProtocol {

  /// <summary>Holder for reflection information generated from Proto/res_CondStageTask.proto</summary>
  public static partial class ResCondStageTaskReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/res_CondStageTask.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResCondStageTaskReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1Qcm90by9yZXNfQ29uZFN0YWdlVGFzay5wcm90bxILcGJfUHJvdG9jb2wi",
            "OQoUcGJDb25kU3RhZ2VUYXNrQXdhcmQSDwoFUmVzSUQYxKUBIAEoBRIQCgZS",
            "ZXNOdW0YhNEBIAEoBSLaAQoPcGJDb25kU3RhZ2VUYXNrEhAKBlRhc2tJRBj2",
            "rgEgASgFEhYKDE1heERvbmVDb3VudBiVogEgASgFEhIKCFRhc2tOYW1lGKrn",
            "ASABKAkSEgoIVGFza0Rlc2MYqL8BIAEoCRIbChFGaW5pc2hDb25kaXRpb25J",
            "RBiqrAEgASgFEhcKDVRhcmdldFByb2Nlc3MYj+oBIAEoBRI/ChJDb25kU3Rh",
            "Z2VUYXNrQXdhcmQYus0BIAMoCzIhLnBiX1Byb3RvY29sLnBiQ29uZFN0YWdl",
            "VGFza0F3YXJkKoUBCitQQl9NQUNST19NQVhfQ09ORFNUQUdFVEFTS19UQVNL",
            "TkFNRV9TVFJfTEVOEisKJ1BCX01BWF9DT05EU1RBR0VUQVNLX1RBU0tOQU1F",
            "X1NUUl9MRU5fMBAAEikKJVBCX01BWF9DT05EU1RBR0VUQVNLX1RBU0tOQU1F",
            "X1NUUl9MRU4QICqFAQorUEJfTUFDUk9fTUFYX0NPTkRTVEFHRVRBU0tfVEFT",
            "S0RFU0NfU1RSX0xFThIrCidQQl9NQVhfQ09ORFNUQUdFVEFTS19UQVNLREVT",
            "Q19TVFJfTEVOXzAQABIpCiVQQl9NQVhfQ09ORFNUQUdFVEFTS19UQVNLREVT",
            "Q19TVFJfTEVOECAqowEKNVBCX01BQ1JPX01BWF9DT05EU1RBR0VUQVNLX0NP",
            "TkRTVEFHRVRBU0tBV0FSRF9DRkdfTlVNEjUKMVBCX01BWF9DT05EU1RBR0VU",
            "QVNLX0NPTkRTVEFHRVRBU0tBV0FSRF9DRkdfTlVNXzAQABIzCi9QQl9NQVhf",
            "Q09ORFNUQUdFVEFTS19DT05EU1RBR0VUQVNLQVdBUkRfQ0ZHX05VTRADYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PbProtocol.PB_MACRO_MAX_CONDSTAGETASK_TASKNAME_STR_LEN), typeof(global::PbProtocol.PB_MACRO_MAX_CONDSTAGETASK_TASKDESC_STR_LEN), typeof(global::PbProtocol.PB_MACRO_MAX_CONDSTAGETASK_CONDSTAGETASKAWARD_CFG_NUM), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PbProtocol.pbCondStageTaskAward), global::PbProtocol.pbCondStageTaskAward.Parser, new[]{ "ResID", "ResNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PbProtocol.pbCondStageTask), global::PbProtocol.pbCondStageTask.Parser, new[]{ "TaskID", "MaxDoneCount", "TaskName", "TaskDesc", "FinishConditionID", "TargetProcess", "CondStageTaskAward" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PB_MACRO_MAX_CONDSTAGETASK_TASKNAME_STR_LEN {
    [pbr::OriginalName("PB_MAX_CONDSTAGETASK_TASKNAME_STR_LEN_0")] PbMaxCondstagetaskTasknameStrLen0 = 0,
    [pbr::OriginalName("PB_MAX_CONDSTAGETASK_TASKNAME_STR_LEN")] PbMaxCondstagetaskTasknameStrLen = 32,
  }

  public enum PB_MACRO_MAX_CONDSTAGETASK_TASKDESC_STR_LEN {
    [pbr::OriginalName("PB_MAX_CONDSTAGETASK_TASKDESC_STR_LEN_0")] PbMaxCondstagetaskTaskdescStrLen0 = 0,
    [pbr::OriginalName("PB_MAX_CONDSTAGETASK_TASKDESC_STR_LEN")] PbMaxCondstagetaskTaskdescStrLen = 32,
  }

  public enum PB_MACRO_MAX_CONDSTAGETASK_CONDSTAGETASKAWARD_CFG_NUM {
    [pbr::OriginalName("PB_MAX_CONDSTAGETASK_CONDSTAGETASKAWARD_CFG_NUM_0")] PbMaxCondstagetaskCondstagetaskawardCfgNum0 = 0,
    [pbr::OriginalName("PB_MAX_CONDSTAGETASK_CONDSTAGETASKAWARD_CFG_NUM")] PbMaxCondstagetaskCondstagetaskawardCfgNum = 3,
  }

  #endregion

  #region Messages
  public sealed partial class pbCondStageTaskAward : pb::IMessage<pbCondStageTaskAward> {
    private static readonly pb::MessageParser<pbCondStageTaskAward> _parser = new pb::MessageParser<pbCondStageTaskAward>(() => new pbCondStageTaskAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pbCondStageTaskAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbProtocol.ResCondStageTaskReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbCondStageTaskAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbCondStageTaskAward(pbCondStageTaskAward other) : this() {
      resID_ = other.resID_;
      resNum_ = other.resNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbCondStageTaskAward Clone() {
      return new pbCondStageTaskAward(this);
    }

    /// <summary>Field number for the "ResID" field.</summary>
    public const int ResIDFieldNumber = 21188;
    private int resID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResID {
      get { return resID_; }
      set {
        resID_ = value;
      }
    }

    /// <summary>Field number for the "ResNum" field.</summary>
    public const int ResNumFieldNumber = 26756;
    private int resNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResNum {
      get { return resNum_; }
      set {
        resNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pbCondStageTaskAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pbCondStageTaskAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResID != other.ResID) return false;
      if (ResNum != other.ResNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResID != 0) hash ^= ResID.GetHashCode();
      if (ResNum != 0) hash ^= ResNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResID != 0) {
        output.WriteRawTag(160, 172, 10);
        output.WriteInt32(ResID);
      }
      if (ResNum != 0) {
        output.WriteRawTag(160, 136, 13);
        output.WriteInt32(ResNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResID != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(ResID);
      }
      if (ResNum != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(ResNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pbCondStageTaskAward other) {
      if (other == null) {
        return;
      }
      if (other.ResID != 0) {
        ResID = other.ResID;
      }
      if (other.ResNum != 0) {
        ResNum = other.ResNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 169504: {
            ResID = input.ReadInt32();
            break;
          }
          case 214048: {
            ResNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pbCondStageTask : pb::IMessage<pbCondStageTask> {
    private static readonly pb::MessageParser<pbCondStageTask> _parser = new pb::MessageParser<pbCondStageTask>(() => new pbCondStageTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pbCondStageTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbProtocol.ResCondStageTaskReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbCondStageTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbCondStageTask(pbCondStageTask other) : this() {
      taskID_ = other.taskID_;
      maxDoneCount_ = other.maxDoneCount_;
      taskName_ = other.taskName_;
      taskDesc_ = other.taskDesc_;
      finishConditionID_ = other.finishConditionID_;
      targetProcess_ = other.targetProcess_;
      condStageTaskAward_ = other.condStageTaskAward_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbCondStageTask Clone() {
      return new pbCondStageTask(this);
    }

    /// <summary>Field number for the "TaskID" field.</summary>
    public const int TaskIDFieldNumber = 22390;
    private int taskID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskID {
      get { return taskID_; }
      set {
        taskID_ = value;
      }
    }

    /// <summary>Field number for the "MaxDoneCount" field.</summary>
    public const int MaxDoneCountFieldNumber = 20757;
    private int maxDoneCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxDoneCount {
      get { return maxDoneCount_; }
      set {
        maxDoneCount_ = value;
      }
    }

    /// <summary>Field number for the "TaskName" field.</summary>
    public const int TaskNameFieldNumber = 29610;
    private string taskName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskName {
      get { return taskName_; }
      set {
        taskName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaskDesc" field.</summary>
    public const int TaskDescFieldNumber = 24488;
    private string taskDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskDesc {
      get { return taskDesc_; }
      set {
        taskDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FinishConditionID" field.</summary>
    public const int FinishConditionIDFieldNumber = 22058;
    private int finishConditionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FinishConditionID {
      get { return finishConditionID_; }
      set {
        finishConditionID_ = value;
      }
    }

    /// <summary>Field number for the "TargetProcess" field.</summary>
    public const int TargetProcessFieldNumber = 29967;
    private int targetProcess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetProcess {
      get { return targetProcess_; }
      set {
        targetProcess_ = value;
      }
    }

    /// <summary>Field number for the "CondStageTaskAward" field.</summary>
    public const int CondStageTaskAwardFieldNumber = 26298;
    private static readonly pb::FieldCodec<global::PbProtocol.pbCondStageTaskAward> _repeated_condStageTaskAward_codec
        = pb::FieldCodec.ForMessage(210386, global::PbProtocol.pbCondStageTaskAward.Parser);
    private readonly pbc::RepeatedField<global::PbProtocol.pbCondStageTaskAward> condStageTaskAward_ = new pbc::RepeatedField<global::PbProtocol.pbCondStageTaskAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PbProtocol.pbCondStageTaskAward> CondStageTaskAward {
      get { return condStageTaskAward_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pbCondStageTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pbCondStageTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskID != other.TaskID) return false;
      if (MaxDoneCount != other.MaxDoneCount) return false;
      if (TaskName != other.TaskName) return false;
      if (TaskDesc != other.TaskDesc) return false;
      if (FinishConditionID != other.FinishConditionID) return false;
      if (TargetProcess != other.TargetProcess) return false;
      if(!condStageTaskAward_.Equals(other.condStageTaskAward_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskID != 0) hash ^= TaskID.GetHashCode();
      if (MaxDoneCount != 0) hash ^= MaxDoneCount.GetHashCode();
      if (TaskName.Length != 0) hash ^= TaskName.GetHashCode();
      if (TaskDesc.Length != 0) hash ^= TaskDesc.GetHashCode();
      if (FinishConditionID != 0) hash ^= FinishConditionID.GetHashCode();
      if (TargetProcess != 0) hash ^= TargetProcess.GetHashCode();
      hash ^= condStageTaskAward_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxDoneCount != 0) {
        output.WriteRawTag(168, 145, 10);
        output.WriteInt32(MaxDoneCount);
      }
      if (FinishConditionID != 0) {
        output.WriteRawTag(208, 226, 10);
        output.WriteInt32(FinishConditionID);
      }
      if (TaskID != 0) {
        output.WriteRawTag(176, 247, 10);
        output.WriteInt32(TaskID);
      }
      if (TaskDesc.Length != 0) {
        output.WriteRawTag(194, 250, 11);
        output.WriteString(TaskDesc);
      }
      condStageTaskAward_.WriteTo(output, _repeated_condStageTaskAward_codec);
      if (TaskName.Length != 0) {
        output.WriteRawTag(210, 186, 14);
        output.WriteString(TaskName);
      }
      if (TargetProcess != 0) {
        output.WriteRawTag(248, 208, 14);
        output.WriteInt32(TargetProcess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskID != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(TaskID);
      }
      if (MaxDoneCount != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(MaxDoneCount);
      }
      if (TaskName.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(TaskName);
      }
      if (TaskDesc.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(TaskDesc);
      }
      if (FinishConditionID != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(FinishConditionID);
      }
      if (TargetProcess != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(TargetProcess);
      }
      size += condStageTaskAward_.CalculateSize(_repeated_condStageTaskAward_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pbCondStageTask other) {
      if (other == null) {
        return;
      }
      if (other.TaskID != 0) {
        TaskID = other.TaskID;
      }
      if (other.MaxDoneCount != 0) {
        MaxDoneCount = other.MaxDoneCount;
      }
      if (other.TaskName.Length != 0) {
        TaskName = other.TaskName;
      }
      if (other.TaskDesc.Length != 0) {
        TaskDesc = other.TaskDesc;
      }
      if (other.FinishConditionID != 0) {
        FinishConditionID = other.FinishConditionID;
      }
      if (other.TargetProcess != 0) {
        TargetProcess = other.TargetProcess;
      }
      condStageTaskAward_.Add(other.condStageTaskAward_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 166056: {
            MaxDoneCount = input.ReadInt32();
            break;
          }
          case 176464: {
            FinishConditionID = input.ReadInt32();
            break;
          }
          case 179120: {
            TaskID = input.ReadInt32();
            break;
          }
          case 195906: {
            TaskDesc = input.ReadString();
            break;
          }
          case 210386: {
            condStageTaskAward_.AddEntriesFrom(input, _repeated_condStageTaskAward_codec);
            break;
          }
          case 236882: {
            TaskName = input.ReadString();
            break;
          }
          case 239736: {
            TargetProcess = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
