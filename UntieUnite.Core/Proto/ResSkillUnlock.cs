// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/res_Skill_Unlock.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PbProtocol {

  /// <summary>Holder for reflection information generated from Proto/res_Skill_Unlock.proto</summary>
  public static partial class ResSkillUnlockReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/res_Skill_Unlock.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResSkillUnlockReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQcm90by9yZXNfU2tpbGxfVW5sb2NrLnByb3RvEgtwYl9Qcm90b2NvbCLL",
            "AQoOcGJTa2lsbF9VbmxvY2sSEwoJUG9rZW1vbklkGIXpASABKAUSDwoFTGV2",
            "ZWwYuegBIAEoBRIRCgdBd2FyZElkGJvbASABKAUSEwoJQXdhcmRUeXBlGKq2",
            "ASABKAUSFAoKRXhwZXJpZW5jZRiiwQEgASgFEhMKCUxldmVsSWNvbhiIogEg",
            "ASgJEhMKCUF3YXJkU2hvdxjfqgEgASgJEhYKDERlc2N0cmlwdGlvbhj8pAEg",
            "ASgJEhMKCVNsb3RJbmRleBi/qQEgASgFKoUBCitQQl9NQUNST19NQVhfU0tJ",
            "TExfVU5MT0NLX0xFVkVMSUNPTl9TVFJfTEVOEisKJ1BCX01BWF9TS0lMTF9V",
            "TkxPQ0tfTEVWRUxJQ09OX1NUUl9MRU5fMBAAEikKJVBCX01BWF9TS0lMTF9V",
            "TkxPQ0tfTEVWRUxJQ09OX1NUUl9MRU4QQCqFAQorUEJfTUFDUk9fTUFYX1NL",
            "SUxMX1VOTE9DS19BV0FSRFNIT1dfU1RSX0xFThIrCidQQl9NQVhfU0tJTExf",
            "VU5MT0NLX0FXQVJEU0hPV19TVFJfTEVOXzAQABIpCiVQQl9NQVhfU0tJTExf",
            "VU5MT0NLX0FXQVJEU0hPV19TVFJfTEVOEEAqjgEKLlBCX01BQ1JPX01BWF9T",
            "S0lMTF9VTkxPQ0tfREVTQ1RSSVBUSU9OX1NUUl9MRU4SLgoqUEJfTUFYX1NL",
            "SUxMX1VOTE9DS19ERVNDVFJJUFRJT05fU1RSX0xFTl8wEAASLAooUEJfTUFY",
            "X1NLSUxMX1VOTE9DS19ERVNDVFJJUFRJT05fU1RSX0xFThBAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PbProtocol.PB_MACRO_MAX_SKILL_UNLOCK_LEVELICON_STR_LEN), typeof(global::PbProtocol.PB_MACRO_MAX_SKILL_UNLOCK_AWARDSHOW_STR_LEN), typeof(global::PbProtocol.PB_MACRO_MAX_SKILL_UNLOCK_DESCTRIPTION_STR_LEN), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PbProtocol.pbSkill_Unlock), global::PbProtocol.pbSkill_Unlock.Parser, new[]{ "PokemonId", "Level", "AwardId", "AwardType", "Experience", "LevelIcon", "AwardShow", "Desctription", "SlotIndex" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PB_MACRO_MAX_SKILL_UNLOCK_LEVELICON_STR_LEN {
    [pbr::OriginalName("PB_MAX_SKILL_UNLOCK_LEVELICON_STR_LEN_0")] PbMaxSkillUnlockLeveliconStrLen0 = 0,
    [pbr::OriginalName("PB_MAX_SKILL_UNLOCK_LEVELICON_STR_LEN")] PbMaxSkillUnlockLeveliconStrLen = 64,
  }

  public enum PB_MACRO_MAX_SKILL_UNLOCK_AWARDSHOW_STR_LEN {
    [pbr::OriginalName("PB_MAX_SKILL_UNLOCK_AWARDSHOW_STR_LEN_0")] PbMaxSkillUnlockAwardshowStrLen0 = 0,
    [pbr::OriginalName("PB_MAX_SKILL_UNLOCK_AWARDSHOW_STR_LEN")] PbMaxSkillUnlockAwardshowStrLen = 64,
  }

  public enum PB_MACRO_MAX_SKILL_UNLOCK_DESCTRIPTION_STR_LEN {
    [pbr::OriginalName("PB_MAX_SKILL_UNLOCK_DESCTRIPTION_STR_LEN_0")] PbMaxSkillUnlockDesctriptionStrLen0 = 0,
    [pbr::OriginalName("PB_MAX_SKILL_UNLOCK_DESCTRIPTION_STR_LEN")] PbMaxSkillUnlockDesctriptionStrLen = 64,
  }

  #endregion

  #region Messages
  public sealed partial class pbSkill_Unlock : pb::IMessage<pbSkill_Unlock> {
    private static readonly pb::MessageParser<pbSkill_Unlock> _parser = new pb::MessageParser<pbSkill_Unlock>(() => new pbSkill_Unlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pbSkill_Unlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PbProtocol.ResSkillUnlockReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbSkill_Unlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbSkill_Unlock(pbSkill_Unlock other) : this() {
      pokemonId_ = other.pokemonId_;
      level_ = other.level_;
      awardId_ = other.awardId_;
      awardType_ = other.awardType_;
      experience_ = other.experience_;
      levelIcon_ = other.levelIcon_;
      awardShow_ = other.awardShow_;
      desctription_ = other.desctription_;
      slotIndex_ = other.slotIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbSkill_Unlock Clone() {
      return new pbSkill_Unlock(this);
    }

    /// <summary>Field number for the "PokemonId" field.</summary>
    public const int PokemonIdFieldNumber = 29829;
    private int pokemonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PokemonId {
      get { return pokemonId_; }
      set {
        pokemonId_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 29753;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "AwardId" field.</summary>
    public const int AwardIdFieldNumber = 28059;
    private int awardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardId {
      get { return awardId_; }
      set {
        awardId_ = value;
      }
    }

    /// <summary>Field number for the "AwardType" field.</summary>
    public const int AwardTypeFieldNumber = 23338;
    private int awardType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardType {
      get { return awardType_; }
      set {
        awardType_ = value;
      }
    }

    /// <summary>Field number for the "Experience" field.</summary>
    public const int ExperienceFieldNumber = 24738;
    private int experience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Experience {
      get { return experience_; }
      set {
        experience_ = value;
      }
    }

    /// <summary>Field number for the "LevelIcon" field.</summary>
    public const int LevelIconFieldNumber = 20744;
    private string levelIcon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LevelIcon {
      get { return levelIcon_; }
      set {
        levelIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AwardShow" field.</summary>
    public const int AwardShowFieldNumber = 21855;
    private string awardShow_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AwardShow {
      get { return awardShow_; }
      set {
        awardShow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Desctription" field.</summary>
    public const int DesctriptionFieldNumber = 21116;
    private string desctription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desctription {
      get { return desctription_; }
      set {
        desctription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SlotIndex" field.</summary>
    public const int SlotIndexFieldNumber = 21695;
    private int slotIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotIndex {
      get { return slotIndex_; }
      set {
        slotIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pbSkill_Unlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pbSkill_Unlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PokemonId != other.PokemonId) return false;
      if (Level != other.Level) return false;
      if (AwardId != other.AwardId) return false;
      if (AwardType != other.AwardType) return false;
      if (Experience != other.Experience) return false;
      if (LevelIcon != other.LevelIcon) return false;
      if (AwardShow != other.AwardShow) return false;
      if (Desctription != other.Desctription) return false;
      if (SlotIndex != other.SlotIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PokemonId != 0) hash ^= PokemonId.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (AwardId != 0) hash ^= AwardId.GetHashCode();
      if (AwardType != 0) hash ^= AwardType.GetHashCode();
      if (Experience != 0) hash ^= Experience.GetHashCode();
      if (LevelIcon.Length != 0) hash ^= LevelIcon.GetHashCode();
      if (AwardShow.Length != 0) hash ^= AwardShow.GetHashCode();
      if (Desctription.Length != 0) hash ^= Desctription.GetHashCode();
      if (SlotIndex != 0) hash ^= SlotIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LevelIcon.Length != 0) {
        output.WriteRawTag(194, 144, 10);
        output.WriteString(LevelIcon);
      }
      if (Desctription.Length != 0) {
        output.WriteRawTag(226, 167, 10);
        output.WriteString(Desctription);
      }
      if (SlotIndex != 0) {
        output.WriteRawTag(248, 203, 10);
        output.WriteInt32(SlotIndex);
      }
      if (AwardShow.Length != 0) {
        output.WriteRawTag(250, 213, 10);
        output.WriteString(AwardShow);
      }
      if (AwardType != 0) {
        output.WriteRawTag(208, 178, 11);
        output.WriteInt32(AwardType);
      }
      if (Experience != 0) {
        output.WriteRawTag(144, 138, 12);
        output.WriteInt32(Experience);
      }
      if (AwardId != 0) {
        output.WriteRawTag(216, 217, 13);
        output.WriteInt32(AwardId);
      }
      if (Level != 0) {
        output.WriteRawTag(200, 195, 14);
        output.WriteInt32(Level);
      }
      if (PokemonId != 0) {
        output.WriteRawTag(168, 200, 14);
        output.WriteInt32(PokemonId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PokemonId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(PokemonId);
      }
      if (Level != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (AwardId != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(AwardId);
      }
      if (AwardType != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(AwardType);
      }
      if (Experience != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(Experience);
      }
      if (LevelIcon.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(LevelIcon);
      }
      if (AwardShow.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(AwardShow);
      }
      if (Desctription.Length != 0) {
        size += 3 + pb::CodedOutputStream.ComputeStringSize(Desctription);
      }
      if (SlotIndex != 0) {
        size += 3 + pb::CodedOutputStream.ComputeInt32Size(SlotIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pbSkill_Unlock other) {
      if (other == null) {
        return;
      }
      if (other.PokemonId != 0) {
        PokemonId = other.PokemonId;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.AwardId != 0) {
        AwardId = other.AwardId;
      }
      if (other.AwardType != 0) {
        AwardType = other.AwardType;
      }
      if (other.Experience != 0) {
        Experience = other.Experience;
      }
      if (other.LevelIcon.Length != 0) {
        LevelIcon = other.LevelIcon;
      }
      if (other.AwardShow.Length != 0) {
        AwardShow = other.AwardShow;
      }
      if (other.Desctription.Length != 0) {
        Desctription = other.Desctription;
      }
      if (other.SlotIndex != 0) {
        SlotIndex = other.SlotIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 165954: {
            LevelIcon = input.ReadString();
            break;
          }
          case 168930: {
            Desctription = input.ReadString();
            break;
          }
          case 173560: {
            SlotIndex = input.ReadInt32();
            break;
          }
          case 174842: {
            AwardShow = input.ReadString();
            break;
          }
          case 186704: {
            AwardType = input.ReadInt32();
            break;
          }
          case 197904: {
            Experience = input.ReadInt32();
            break;
          }
          case 224472: {
            AwardId = input.ReadInt32();
            break;
          }
          case 238024: {
            Level = input.ReadInt32();
            break;
          }
          case 238632: {
            PokemonId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
